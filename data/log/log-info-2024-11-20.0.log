24-11-20.10:26:15.926 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 20056 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.10:26:15.928 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.10:26:17.056 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.10:26:17.059 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.10:26:17.097 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
24-11-20.10:26:17.740 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.10:26:17.747 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.10:26:17.748 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.10:26:17.748 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.10:26:17.921 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.10:26:17.921 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1944 ms
24-11-20.10:26:18.117 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.10:26:18.121 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.10:26:18.133 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.10:26:18.156 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.10:27:42.060 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 26768 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.10:27:42.061 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.10:27:42.853 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.10:27:42.854 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.10:27:42.884 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
24-11-20.10:27:43.407 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.10:27:43.414 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.10:27:43.415 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.10:27:43.415 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.10:27:43.595 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.10:27:43.595 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1497 ms
24-11-20.10:27:44.165 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.10:27:55.842 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatch': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/zhouyihe/bigmarket/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
24-11-20.10:27:55.844 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.10:27:55.857 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.10:27:55.888 [main            ] ERROR SpringApplication      - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatch': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/zhouyihe/bigmarket/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.zhouyihe.bigmarket.Application.main(Application.java:14)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatch': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/zhouyihe/bigmarket/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 17 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyRepository': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/zhouyihe/bigmarket/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonService': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/zhouyihe/bigmarket/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:544)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 49 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redissonClient' defined in class path resource [com/zhouyihe/bigmarket/config/RedisClientConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:550)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:520)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:673)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:329)
	... 65 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 81 common frames omitted
Caused by: org.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:16379
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$0(ConnectionPool.java:132)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)
	at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)
	at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1990)
	at org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:294)
	at org.redisson.connection.pool.ConnectionPool.lambda$createConnection$6(ConnectionPool.java:253)
	at java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)
	at java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)
	at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)
	at java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1990)
	at org.redisson.client.RedisClient$1$2.run(RedisClient.java:257)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.util.concurrent.CompletionException: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: 127.0.0.1/127.0.0.1:16379
	at java.util.concurrent.CompletableFuture.encodeRelay(CompletableFuture.java:326)
	at java.util.concurrent.CompletableFuture.completeRelay(CompletableFuture.java:338)
	at java.util.concurrent.CompletableFuture.uniRelay(CompletableFuture.java:925)
	at java.util.concurrent.CompletableFuture$UniRelay.tryFire(CompletableFuture.java:913)
	... 12 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: 127.0.0.1/127.0.0.1:16379
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:715)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:750)
24-11-20.10:28:12.919 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 23312 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.10:28:12.922 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.10:28:15.989 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.10:28:15.999 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.10:28:16.143 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 0 Redis repository interfaces.
24-11-20.10:28:17.739 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.10:28:17.748 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.10:28:17.748 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.10:28:17.748 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.10:28:19.475 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.10:28:19.475 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6427 ms
24-11-20.10:28:20.175 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.10:28:20.829 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.10:28:20.849 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.10:28:20.924 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatch': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'strategyRepository': Unsatisfied dependency expressed through field 'converter'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
24-11-20.10:28:20.951 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.10:28:20.966 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.10:28:20.994 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field converter in com.zhouyihe.bigmarket.infrastructure.persistent.repository.StrategyRepository required a bean of type 'io.github.linpeilie.Converter' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.10:30:56.637 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 12104 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.10:30:56.640 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.10:30:57.528 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.10:30:57.531 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.10:30:57.565 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
24-11-20.10:30:58.075 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.10:30:58.084 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.10:30:58.084 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.10:30:58.084 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.10:30:58.254 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.10:30:58.255 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1571 ms
24-11-20.10:30:58.441 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.10:30:58.445 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.10:30:58.456 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.10:30:58.480 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.12:55:19.026 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 39796 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.12:55:19.029 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.12:55:20.679 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.12:55:20.681 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.12:55:20.714 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
24-11-20.12:55:21.322 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.12:55:21.333 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.12:55:21.334 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.12:55:21.334 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.12:55:22.189 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.12:55:22.189 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3125 ms
24-11-20.12:55:22.439 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.12:55:22.444 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.12:55:22.473 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.12:55:22.518 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.12:55:33.412 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 39648 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.12:55:33.415 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.12:55:34.179 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.12:55:34.181 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.12:55:34.212 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
24-11-20.12:55:34.693 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.12:55:34.700 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.12:55:34.700 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.12:55:34.701 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.12:55:34.874 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.12:55:34.874 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1418 ms
24-11-20.12:55:35.507 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.12:55:36.045 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.12:55:36.072 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.12:55:36.802 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.12:55:36.834 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.12:55:36.846 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.12:55:36.862 [main            ] INFO  Application            - Started Application in 3.95 seconds (JVM running for 4.903)
24-11-20.12:55:37.160 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.12:55:38.324 [RMI TCP Connection(4)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.12:55:38.324 [RMI TCP Connection(4)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.12:55:38.325 [RMI TCP Connection(4)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-11-20.12:55:38.345 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.12:55:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:55:40.087 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.12:55:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:55:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.12:55:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:55:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.12:55:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:56:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:57:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:58:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.12:59:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:20.361 [http-nio-8091-exec-2] INFO  IRaffleController      - 抽奖策略装配开始 strategyId:100006
24-11-20.13:00:20.554 [http-nio-8091-exec-2] INFO  IRaffleController      - 抽奖策略装配开始 strategyId:100006 response:{"code":"0000","data":true,"info":"调用成功"}
24-11-20.13:00:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:00:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:01:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:02:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:03:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:04:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:05:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:06:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:07:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:20.456 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:44.140 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=27m5s457ms65µs200ns).
24-11-20.13:34:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:34:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:25.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:35:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:36:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:37:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:38:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.13:39:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:18.585 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:32.811 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=44m48s578ms686µs800ns).
24-11-20.14:24:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:24:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:25:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:26:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:27:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:28:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:29:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:30:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:26.818 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:49.740 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m16s815ms762µs800ns).
24-11-20.14:34:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:34:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:35:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:36:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:37:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:38:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:39:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:40:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:41:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:42:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:43:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:44:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:45:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:46:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:47:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:48:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:23.455 [http-nio-8091-exec-8] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
24-11-20.14:49:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:45.394 [http-nio-8091-exec-3] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
24-11-20.14:49:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:49:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:47.291 [http-nio-8091-exec-9] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
24-11-20.14:50:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:50:55.545 [http-nio-8091-exec-13] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
24-11-20.14:51:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:04.087 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-11-20.14:51:04.114 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-11-20.14:51:06.964 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 24136 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.14:51:06.967 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.14:51:07.856 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.14:51:07.858 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.14:51:07.890 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
24-11-20.14:51:08.404 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.14:51:08.413 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.14:51:08.413 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.14:51:08.413 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.14:51:08.597 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.14:51:08.597 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1592 ms
24-11-20.14:51:09.101 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.14:51:09.680 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.14:51:09.694 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.14:51:10.543 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.14:51:10.588 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.14:51:10.609 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.14:51:10.628 [main            ] INFO  Application            - Started Application in 4.299 seconds (JVM running for 5.571)
24-11-20.14:51:11.029 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.14:51:11.641 [RMI TCP Connection(3)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.14:51:11.641 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.14:51:11.642 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-11-20.14:51:11.895 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.14:51:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:23.919 [http-nio-8091-exec-2] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100006
24-11-20.14:51:23.971 [http-nio-8091-exec-2] ERROR IRaffleController      - 查询抽奖奖品列表配置失败 strategyId：100006
java.lang.NullPointerException: null
	at com.zhouyihe.bigmarket.trigger.http.IRaffleController.queryRaffleAwardList(IRaffleController.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-11-20.14:51:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:51:54.472 [http-nio-8091-exec-1] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100006
24-11-20.14:52:40.918 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:52:40.919 [http-nio-8091-exec-1] ERROR IRaffleController      - 查询抽奖奖品列表配置失败 strategyId：100006
java.lang.NullPointerException: null
	at com.zhouyihe.bigmarket.trigger.http.IRaffleController.queryRaffleAwardList(IRaffleController.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-11-20.14:52:40.920 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s895ms821µs700ns).
24-11-20.14:52:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:52:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:52:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:53:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.14:53:04.599 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-11-20.14:53:04.617 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-11-20.14:53:13.673 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 32884 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.14:53:13.678 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.14:53:14.795 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.14:53:14.797 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.14:53:14.826 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
24-11-20.14:53:15.501 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.14:53:15.512 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.14:53:15.513 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.14:53:15.513 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.14:53:15.780 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.14:53:15.780 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2016 ms
24-11-20.14:53:16.303 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.14:53:16.858 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.14:53:16.874 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.14:53:16.972 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatch': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'strategyRepository': Unsatisfied dependency expressed through field 'converter'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
24-11-20.14:53:17.005 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.14:53:17.024 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.14:53:17.051 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field converter in com.zhouyihe.bigmarket.infrastructure.persistent.repository.StrategyRepository required a bean of type 'io.github.linpeilie.Converter' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.14:54:51.055 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 33200 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.14:54:51.057 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.14:54:51.958 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.14:54:51.961 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.14:54:51.998 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
24-11-20.14:54:52.615 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.14:54:52.624 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.14:54:52.624 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.14:54:52.624 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.14:54:52.802 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.14:54:52.802 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1711 ms
24-11-20.14:54:52.988 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.14:54:52.990 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.14:54:53.001 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.14:54:53.022 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.14:56:45.769 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 28780 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.14:56:45.771 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.14:56:46.683 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.14:56:46.686 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.14:56:46.723 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
24-11-20.14:56:47.394 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.14:56:47.405 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.14:56:47.406 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.14:56:47.406 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.14:56:47.617 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.14:56:47.617 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1805 ms
24-11-20.14:56:48.112 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.14:56:48.659 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.14:56:48.683 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.14:56:48.756 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'strategyArmoryDispatch': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'strategyRepository': Unsatisfied dependency expressed through field 'converter'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
24-11-20.14:56:48.773 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.14:56:48.784 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.14:56:48.807 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field converter in com.zhouyihe.bigmarket.infrastructure.persistent.repository.StrategyRepository required a bean of type 'io.github.linpeilie.Converter' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.15:09:24.929 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 6956 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.15:09:24.932 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.15:09:25.803 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.15:09:25.805 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.15:09:25.838 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
24-11-20.15:09:26.382 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.15:09:26.394 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.15:09:26.395 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.15:09:26.395 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.15:09:26.589 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.15:09:26.589 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1610 ms
24-11-20.15:09:26.850 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.15:09:26.854 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.15:09:26.866 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.15:09:26.894 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.15:11:01.616 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 36184 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.15:11:01.619 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.15:11:02.631 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.15:11:02.632 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.15:11:02.663 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
24-11-20.15:11:03.166 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.15:11:03.174 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.15:11:03.175 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.15:11:03.175 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.15:11:03.344 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.15:11:03.344 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1686 ms
24-11-20.15:11:03.523 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.15:11:03.526 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.15:11:03.537 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.15:11:03.555 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.15:17:18.803 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 38516 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.15:17:18.806 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.15:17:19.792 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.15:17:19.795 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.15:17:19.833 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
24-11-20.15:17:20.416 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.15:17:20.426 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.15:17:20.427 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.15:17:20.427 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.15:17:20.638 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.15:17:20.638 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1796 ms
24-11-20.15:17:20.869 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IRaffleController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.github.linpeilie.Converter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@javax.annotation.Resource(shareable=true, lookup=, name=, description=, authenticationType=CONTAINER, type=class java.lang.Object, mappedName=)}
24-11-20.15:17:20.873 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-11-20.15:17:20.887 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-11-20.15:17:20.910 [main            ] ERROR LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

A component required a bean of type 'io.github.linpeilie.Converter' that could not be found.


Action:

Consider defining a bean of type 'io.github.linpeilie.Converter' in your configuration.

24-11-20.15:51:44.672 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 2056 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.15:51:44.675 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.15:51:45.787 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.15:51:45.791 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.15:51:45.832 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
24-11-20.15:51:46.497 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.15:51:46.504 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.15:51:46.505 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.15:51:46.505 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.15:51:46.677 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.15:51:46.677 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1948 ms
24-11-20.15:51:47.257 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.15:51:47.831 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.15:51:47.851 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.15:51:48.684 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.15:51:48.733 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.15:51:48.749 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.15:51:48.769 [main            ] INFO  Application            - Started Application in 4.658 seconds (JVM running for 6.012)
24-11-20.15:51:49.351 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.15:51:49.998 [RMI TCP Connection(3)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.15:51:49.998 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.15:51:50.000 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-11-20.15:51:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:51:50.312 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.15:51:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:00.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:07.596 [http-nio-8091-exec-2] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100006
24-11-20.15:52:07.805 [http-nio-8091-exec-2] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"调用成功"}
24-11-20.15:52:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:30.673 [http-nio-8091-exec-3] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100001
24-11-20.15:52:30.828 [http-nio-8091-exec-3] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"5次使用","sort":2},{"awardId":103,"awardTitle":"10次使用","sort":3},{"awardId":104,"awardTitle":"20次使用","sort":4},{"awardId":105,"awardTitle":"增加gpt-4对话模型","sort":5},{"awardId":106,"awardTitle":"增加dall-e-2画图模型","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"增加dall-e-3画图模型","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"增加100次使用","sort":8},{"awardId":109,"awardSubtitle":"抽奖6次后解锁","awardTitle":"解锁全部模型","sort":9}],"info":"调用成功"}
24-11-20.15:52:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:52:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:53:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:06.120 [http-nio-8091-exec-6] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100006
24-11-20.15:54:06.123 [http-nio-8091-exec-6] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"调用成功"}
24-11-20.15:54:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:54:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:26.212 [http-nio-8091-exec-9] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100001
24-11-20.15:55:26.215 [http-nio-8091-exec-9] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"5次使用","sort":2},{"awardId":103,"awardTitle":"10次使用","sort":3},{"awardId":104,"awardTitle":"20次使用","sort":4},{"awardId":105,"awardTitle":"增加gpt-4对话模型","sort":5},{"awardId":106,"awardTitle":"增加dall-e-2画图模型","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"增加dall-e-3画图模型","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"增加100次使用","sort":8},{"awardId":109,"awardSubtitle":"抽奖6次后解锁","awardTitle":"解锁全部模型","sort":9}],"info":"调用成功"}
24-11-20.15:55:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:55:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:56:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:42.490 [http-nio-8091-exec-12] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100006
24-11-20.15:57:42.493 [http-nio-8091-exec-12] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"调用成功"}
24-11-20.15:57:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:57:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:58:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.15:59:51.657 [http-nio-8091-exec-15] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100001
24-11-20.15:59:51.660 [http-nio-8091-exec-15] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100001 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"5次使用","sort":2},{"awardId":103,"awardTitle":"10次使用","sort":3},{"awardId":104,"awardTitle":"20次使用","sort":4},{"awardId":105,"awardTitle":"增加gpt-4对话模型","sort":5},{"awardId":106,"awardTitle":"增加dall-e-2画图模型","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"增加dall-e-3画图模型","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"增加100次使用","sort":8},{"awardId":109,"awardSubtitle":"抽奖6次后解锁","awardTitle":"解锁全部模型","sort":9}],"info":"调用成功"}
24-11-20.15:59:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:12.317 [http-nio-8091-exec-16] INFO  IRaffleController      - 查询抽奖奖品列表配开始 strategyId：100006
24-11-20.16:00:12.320 [http-nio-8091-exec-16] INFO  IRaffleController      - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"调用成功"}
24-11-20.16:00:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:00:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:01:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:25.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:36.049 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-11-20.16:02:36.066 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-11-20.16:02:42.802 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 37580 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.16:02:42.804 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.16:02:43.627 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.16:02:43.628 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.16:02:43.661 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
24-11-20.16:02:44.159 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.16:02:44.166 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.16:02:44.167 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.16:02:44.167 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.16:02:44.329 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.16:02:44.329 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1483 ms
24-11-20.16:02:44.815 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.16:02:45.378 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.16:02:45.401 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.16:02:46.289 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.16:02:46.343 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.16:02:46.363 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.16:02:46.385 [main            ] INFO  Application            - Started Application in 4.187 seconds (JVM running for 5.231)
24-11-20.16:02:46.930 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.16:02:47.680 [RMI TCP Connection(3)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.16:02:47.680 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.16:02:47.682 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-11-20.16:02:47.874 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.16:02:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:02:51.452 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100001
24-11-20.16:02:51.571 [http-nio-8091-exec-1] INFO  BlackListLogicChain    - 抽奖责任链-黑名单开始 userId:system strategyId:100001 ruleModel:rule_blacklist
24-11-20.16:02:51.653 [http-nio-8091-exec-1] INFO  BlackListLogicChain    - 抽奖责任链-黑名单放行 userId:system strategyId:100001 ruleModel:rule_blacklist
24-11-20.16:02:51.653 [http-nio-8091-exec-1] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId:system strategyId:100001 ruleModel:rule_weight
24-11-20.16:02:51.664 [http-nio-8091-exec-1] ERROR IRaffleController      - 随机抽奖失败 strategyId：100001 big_market_strategy_rate_range_key_100001_4000:102,103,104,105:UN_ASSEMBLED_STRATEGY_ARMORY
24-11-20.16:02:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:03:51.897 [http-nio-8091-exec-6] INFO  IRaffleController      - 抽奖策略装配开始 strategyId:100001
24-11-20.16:03:52.132 [http-nio-8091-exec-6] INFO  IRaffleController      - 抽奖策略装配开始 strategyId:100001 response:{"code":"0000","data":true,"info":"调用成功"}
24-11-20.16:03:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:46.918 [http-nio-8091-exec-2] INFO  IRaffleController      - 抽奖策略装配开始 strategyId:100001
24-11-20.16:04:47.023 [http-nio-8091-exec-2] INFO  IRaffleController      - 抽奖策略装配开始 strategyId:100001 response:{"code":"0000","data":true,"info":"调用成功"}
24-11-20.16:04:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:04:53.228 [http-nio-8091-exec-5] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100001
24-11-20.16:04:53.230 [http-nio-8091-exec-5] INFO  BlackListLogicChain    - 抽奖责任链-黑名单开始 userId:system strategyId:100001 ruleModel:rule_blacklist
24-11-20.16:04:53.233 [http-nio-8091-exec-5] INFO  BlackListLogicChain    - 抽奖责任链-黑名单放行 userId:system strategyId:100001 ruleModel:rule_blacklist
24-11-20.16:04:53.233 [http-nio-8091-exec-5] INFO  RuleWeightLogicChain   - 抽奖责任链-权重开始 userId:system strategyId:100001 ruleModel:rule_weight
24-11-20.16:04:53.242 [http-nio-8091-exec-5] INFO  RuleWeightLogicChain   - 抽奖责任链-权重接管 userId:system strategyId:100001 ruleModel:rule_weight
24-11-20.16:04:53.242 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100001 awardId:102 LogicModel:rule_weight
24-11-20.16:04:53.256 [http-nio-8091-exec-5] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100001 response: {"code":"0000","data":{"awardId":102,"awardIndex":2},"info":"调用成功"}
24-11-20.16:04:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:17.421 [http-nio-8091-exec-3] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:05:17.427 [http-nio-8091-exec-3] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:05:17.427 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:05:17.473 [http-nio-8091-exec-3] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:05:17.473 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:05:17.473 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:05:17.476 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:05:17.510 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:05:17.510 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:05:17.510 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:05:17.510 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:05:17.510 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:05:17.515 [http-nio-8091-exec-3] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:05:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:05:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:05:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:06:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:07:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:08:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:09:53.202 [http-nio-8091-exec-9] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:09:53.211 [http-nio-8091-exec-9] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:09:53.211 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:09:53.228 [http-nio-8091-exec-9] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:09:53.229 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:09:53.229 [http-nio-8091-exec-9] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:09:53.231 [http-nio-8091-exec-9] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:09:53.233 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:09:53.233 [http-nio-8091-exec-9] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:09:53.233 [http-nio-8091-exec-9] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:09:53.233 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:09:53.233 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:09:53.235 [http-nio-8091-exec-9] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:09:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:10:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:10.351 [http-nio-8091-exec-10] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:10:10.359 [http-nio-8091-exec-10] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:10:10.359 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:10:10.365 [http-nio-8091-exec-10] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:10:10.365 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:10:10.365 [http-nio-8091-exec-10] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:10:10.368 [http-nio-8091-exec-10] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:10:10.369 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:10:10.369 [http-nio-8091-exec-10] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:10:10.369 [http-nio-8091-exec-10] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:10:10.369 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:10:10.369 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:10:10.371 [http-nio-8091-exec-10] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:10:12.286 [http-nio-8091-exec-11] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:10:12.299 [http-nio-8091-exec-11] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:10:12.299 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:10:12.316 [http-nio-8091-exec-11] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:10:12.317 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:10:12.317 [http-nio-8091-exec-11] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:10:12.324 [http-nio-8091-exec-11] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:10:12.329 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:10:12.330 [http-nio-8091-exec-11] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:10:12.330 [http-nio-8091-exec-11] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:10:12.330 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:10:12.330 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:10:12.335 [http-nio-8091-exec-11] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:10:13.644 [http-nio-8091-exec-12] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:10:13.651 [http-nio-8091-exec-12] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:10:13.651 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:10:13.657 [http-nio-8091-exec-12] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:10:13.657 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:10:13.657 [http-nio-8091-exec-12] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:10:13.659 [http-nio-8091-exec-12] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:10:13.660 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:10:13.660 [http-nio-8091-exec-12] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:10:13.660 [http-nio-8091-exec-12] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:10:13.660 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:10:13.660 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:10:13.661 [http-nio-8091-exec-12] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:10:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:10:15.304 [http-nio-8091-exec-13] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:10:15.314 [http-nio-8091-exec-13] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:10:15.314 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:10:15.324 [http-nio-8091-exec-13] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:10:15.324 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:10:15.324 [http-nio-8091-exec-13] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:10:15.330 [http-nio-8091-exec-13] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:10:15.333 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:10:15.333 [http-nio-8091-exec-13] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:10:15.333 [http-nio-8091-exec-13] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:10:15.333 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:10:15.333 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:10:15.336 [http-nio-8091-exec-13] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:10:16.620 [http-nio-8091-exec-17] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:10:16.625 [http-nio-8091-exec-17] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:10:16.626 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:10:16.631 [http-nio-8091-exec-17] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:10:16.631 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:10:16.631 [http-nio-8091-exec-17] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:10:16.633 [http-nio-8091-exec-17] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:10:16.634 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:10:16.634 [http-nio-8091-exec-17] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:10:16.634 [http-nio-8091-exec-17] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:10:16.634 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:10:16.634 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:10:16.636 [http-nio-8091-exec-17] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:10:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:10:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:10:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:10:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:10:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:10:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:11:39.877 [http-nio-8091-exec-18] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:11:51.718 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:12:15.417 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:12:26.826 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:14:13.596 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:14:13.600 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m46s770ms600µs300ns).
24-11-20.16:14:21.795 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:14:36.043 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:14:36.052 [http-nio-8091-exec-18] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:14:55.369 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:14:55.369 [http-nio-8091-exec-18] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:14:55.389 [http-nio-8091-exec-18] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:14:55.389 [http-nio-8091-exec-18] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:14:55.390 [http-nio-8091-exec-18] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:14:55.394 [http-nio-8091-exec-18] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:14:55.395 [http-nio-8091-exec-18] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:14:55.396 [http-nio-8091-exec-18] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:14:55.396 [http-nio-8091-exec-18] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:14:55.396 [http-nio-8091-exec-18] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:14:55.396 [http-nio-8091-exec-18] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:14:55.404 [http-nio-8091-exec-18] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:14:55.831 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-11-20.16:14:55.869 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-11-20.16:15:00.028 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 41864 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.16:15:00.030 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.16:15:01.039 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.16:15:01.042 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.16:15:01.082 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
24-11-20.16:15:01.785 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.16:15:01.795 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.16:15:01.796 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.16:15:01.796 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.16:15:02.032 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.16:15:02.032 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1964 ms
24-11-20.16:15:02.561 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.16:15:03.140 [redisson-netty-2-5] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.16:15:03.165 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.16:15:03.976 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.16:15:04.009 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.16:15:04.023 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.16:15:04.040 [main            ] INFO  Application            - Started Application in 4.61 seconds (JVM running for 5.744)
24-11-20.16:15:04.844 [RMI TCP Connection(1)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.16:15:04.844 [RMI TCP Connection(1)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.16:15:04.848 [RMI TCP Connection(1)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 4 ms
24-11-20.16:15:04.848 [RMI TCP Connection(2)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.16:15:05.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:15:05.675 [RMI TCP Connection(2)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.16:15:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:15:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:15:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:15:20.016 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:17:03.254 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:17:03.254 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m57s468ms7µs900ns).
24-11-20.16:17:03.273 [http-nio-8091-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:18:13.977 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m10s722ms578µs).
24-11-20.16:18:13.977 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:13.977 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:18:14.029 [http-nio-8091-exec-1] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:18:14.030 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:18:14.030 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:18:14.033 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:18:14.053 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:18:14.053 [http-nio-8091-exec-1] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:18:14.053 [http-nio-8091-exec-1] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:18:14.053 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:18:14.053 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:18:14.157 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:18:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:18:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:20.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:18:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:34.703 [http-nio-8091-exec-3] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:18:34.727 [http-nio-8091-exec-3] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:18:34.730 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:18:34.737 [http-nio-8091-exec-3] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:18:34.737 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:18:34.737 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:18:34.742 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:18:34.745 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:18:34.745 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:18:34.745 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:18:34.745 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:18:34.745 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:18:34.748 [http-nio-8091-exec-3] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:18:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:18:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:45.224 [http-nio-8091-exec-4] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:18:45.233 [http-nio-8091-exec-4] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:18:45.236 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:18:45.241 [http-nio-8091-exec-4] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:18:45.241 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:18:45.241 [http-nio-8091-exec-4] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:18:45.245 [http-nio-8091-exec-4] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:18:45.247 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:18:45.247 [http-nio-8091-exec-4] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:18:45.247 [http-nio-8091-exec-4] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:18:45.247 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:18:45.247 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:18:45.250 [http-nio-8091-exec-4] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:18:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:18:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:18:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:35.067 [http-nio-8091-exec-7] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:19:35.078 [http-nio-8091-exec-7] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:19:35.080 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:19:35.086 [http-nio-8091-exec-7] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:19:35.086 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:19:35.086 [http-nio-8091-exec-7] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:19:35.090 [http-nio-8091-exec-7] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:19:35.093 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:19:35.093 [http-nio-8091-exec-7] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:19:35.093 [http-nio-8091-exec-7] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:19:35.093 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:19:35.093 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:19:35.096 [http-nio-8091-exec-7] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:19:39.810 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-11-20.16:19:39.824 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-11-20.16:19:44.059 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 19752 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.16:19:44.062 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.16:19:44.884 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.16:19:44.886 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.16:19:44.919 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
24-11-20.16:19:45.435 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.16:19:45.443 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.16:19:45.444 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.16:19:45.444 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.16:19:45.687 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.16:19:45.688 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1588 ms
24-11-20.16:19:46.256 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.16:19:46.777 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.16:19:46.798 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.16:19:47.563 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.16:19:47.593 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.16:19:47.605 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.16:19:47.621 [main            ] INFO  Application            - Started Application in 4.1 seconds (JVM running for 5.091)
24-11-20.16:19:48.112 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.16:19:48.695 [RMI TCP Connection(3)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.16:19:48.695 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.16:19:48.697 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-11-20.16:19:48.919 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.16:19:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:50.075 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:19:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:19:56.325 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:20:05.687 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:20:50.660 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:20:50.660 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m1s629ms693µs100ns).
24-11-20.16:20:55.691 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:20:56.238 [http-nio-8091-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:21:10.390 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:21:11.390 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:21:11.426 [http-nio-8091-exec-1] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:21:11.426 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:21:11.426 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:21:11.430 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:21:11.452 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:21:11.452 [http-nio-8091-exec-1] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:21:11.453 [http-nio-8091-exec-1] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:21:11.453 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:21:11.453 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:21:11.550 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:21:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:21:15.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:21:15.394 [http-nio-8091-exec-3] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:21:47.690 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:21:47.690 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=57s30ms515µs500ns).
24-11-20.16:21:47.704 [http-nio-8091-exec-3] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.16:21:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:21:50.014 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.16:21:50.023 [http-nio-8091-exec-3] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.16:21:50.023 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.16:21:50.023 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.16:21:50.027 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.16:21:50.029 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.16:21:50.029 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.16:21:50.029 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.16:21:50.029 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.16:21:50.029 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.16:21:50.033 [http-nio-8091-exec-3] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.16:21:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:21:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.16:22:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.16:22:41.687 [http-nio-8091-exec-2] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.16:23:05.285 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s590ms288µs500ns).
24-11-20.16:23:05.285 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.20:41:26.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.20:41:26.007 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4h18m18s94ms428µs700ns).
24-11-20.20:41:26.108 [http-nio-8091-exec-2] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.20:41:26.109 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.20:41:26.309 [http-nio-8091-exec-2] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.20:41:26.309 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.20:41:26.309 [http-nio-8091-exec-2] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.20:41:26.315 [http-nio-8091-exec-2] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.20:41:26.334 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.20:41:26.334 [http-nio-8091-exec-2] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.20:41:26.334 [http-nio-8091-exec-2] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.20:41:26.334 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.20:41:26.334 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.20:41:26.344 [http-nio-8091-exec-2] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.20:41:26.746 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-11-20.20:41:26.766 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-11-20.20:41:30.846 [main            ] INFO  Application            - Starting Application using Java 1.8.0_401 on LAPTOP-KQ26AIU1 with PID 23716 (D:\Desktop\big-market\big-market-app\target\classes started by 周益和 in D:\Desktop\big-market)
24-11-20.20:41:30.848 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-11-20.20:41:31.832 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-11-20.20:41:31.835 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-11-20.20:41:31.871 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
24-11-20.20:41:32.475 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-11-20.20:41:32.484 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-11-20.20:41:32.485 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-11-20.20:41:32.485 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-11-20.20:41:32.705 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-11-20.20:41:32.705 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1820 ms
24-11-20.20:41:33.504 [main            ] INFO  Version                - Redisson 3.23.4
24-11-20.20:41:34.086 [redisson-netty-2-5] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.20:41:34.131 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-11-20.20:41:35.043 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-11-20.20:41:35.086 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-11-20.20:41:35.102 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-11-20.20:41:35.122 [main            ] INFO  Application            - Started Application in 5.052 seconds (JVM running for 6.125)
24-11-20.20:41:35.473 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-11-20.20:41:36.131 [RMI TCP Connection(3)-192.168.73.26] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-11-20.20:41:36.131 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-11-20.20:41:36.133 [RMI TCP Connection(3)-192.168.73.26] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-11-20.20:41:36.418 [RMI TCP Connection(1)-192.168.73.26] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-11-20.20:41:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.20:41:41.043 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖开始 strategyId: 100006
24-11-20.21:33:02.841 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:02.870 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51m26s298ms566µs900ns).
24-11-20.21:33:02.975 [http-nio-8091-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId:system strategyId:100006 ruleModel:rule_default awardId:102
24-11-20.21:33:17.069 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:17.069 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 userId:system strategyId:100006 awardId:102 LogicModel:rule_default
24-11-20.21:33:17.291 [http-nio-8091-exec-1] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102 ruleValue:1
24-11-20.21:33:17.291 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_lock code:0000
24-11-20.21:33:17.292 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-11-20.21:33:17.299 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减-成功 userId:system strategyId:100006 awardId:102
24-11-20.21:33:17.363 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_stock code:0001
24-11-20.21:33:17.363 [http-nio-8091-exec-1] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-11-20.21:33:17.363 [http-nio-8091-exec-1] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-11-20.21:33:17.363 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【null】treeId:tree_lock node:rule_luck_award code:0001
24-11-20.21:33:17.363 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-11-20.21:33:17.576 [http-nio-8091-exec-1] INFO  IRaffleController      - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"调用成功"}
24-11-20.21:33:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.21:33:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
24-11-20.21:33:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:33:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:34:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:35:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:36:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:37:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:38:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:39:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:40:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:41:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:42:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:43:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:44:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:45:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:46:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:47:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:48:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:49:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:50:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:51:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:52:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:53:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:54:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:55:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:56:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:57:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:58:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.21:58:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:12.167 [scheduling-1    ] ERROR UpdateAwardStockJob    - 定时任务，更新奖品消耗库存失败
org.springframework.dao.QueryTimeoutException: Redis server response timeout (3000 ms) occured after 0 retry attempts, is non-idempotent command: true Check connection with Redis node: 127.0.0.1/127.0.0.1:16379 for TCP packet drops or bandwidth limits.  Try to increase nettyThreads and/or timeout settings. Command: (LPOP), params: [strategy_award_count_queue_key], channel: [id: 0x8699f970, L:/127.0.0.1:60636 - R:127.0.0.1/127.0.0.1:16379]; nested exception is org.redisson.client.RedisResponseTimeoutException: Redis server response timeout (3000 ms) occured after 0 retry attempts, is non-idempotent command: true Check connection with Redis node: 127.0.0.1/127.0.0.1:16379 for TCP packet drops or bandwidth limits.  Try to increase nettyThreads and/or timeout settings. Command: (LPOP), params: [strategy_award_count_queue_key], channel: [id: 0x8699f970, L:/127.0.0.1:60636 - R:127.0.0.1/127.0.0.1:16379]
	at org.redisson.spring.data.connection.RedissonExceptionConverter.convert(RedissonExceptionConverter.java:48)
	at org.redisson.spring.data.connection.RedissonExceptionConverter.convert(RedissonExceptionConverter.java:35)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.redisson.spring.data.connection.RedissonConnectionFactory.translateExceptionIfPossible(RedissonConnectionFactory.java:91)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.zhouyihe.bigmarket.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$89cd093e.takeQueueValue(<generated>)
	at com.zhouyihe.bigmarket.domain.strategy.service.raffle.DefaultRaffleStrategy.takeQueueValue(DefaultRaffleStrategy.java:93)
	at com.zhouyihe.bigmarket.trigger.job.UpdateAwardStockJob.exec(UpdateAwardStockJob.java:27)
	at sun.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.redisson.client.RedisResponseTimeoutException: Redis server response timeout (3000 ms) occured after 0 retry attempts, is non-idempotent command: true Check connection with Redis node: 127.0.0.1/127.0.0.1:16379 for TCP packet drops or bandwidth limits.  Try to increase nettyThreads and/or timeout settings. Command: (LPOP), params: [strategy_award_count_queue_key], channel: [id: 0x8699f970, L:/127.0.0.1:60636 - R:127.0.0.1/127.0.0.1:16379]
	at org.redisson.command.RedisExecutor.lambda$scheduleResponseTimeout$9(RedisExecutor.java:407)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
24-11-20.22:27:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:20.067 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:25.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:39.605 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=29m36s208ms145µs500ns).
24-11-20.22:27:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:27:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:28:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:29:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:30:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:31:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:25.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:32:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:33:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:34:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:35:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:36:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:37:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:20.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:38:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:39:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:40:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:41:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:42:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:43:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:44:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:45:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:46:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:47:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:48:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:49:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:50:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:51:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:52:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:53:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:54:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:00.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:55:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:56:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.22:57:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:32:44.851 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=36m4s788ms160µs800ns).
24-11-20.23:32:45.116 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:32:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:32:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:33:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:20.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:34:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:35:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:36:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:37:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:38:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:39:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:40:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:41:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:42:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:43:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:40.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:44:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:45:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:46:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:47:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:48:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:49:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:50:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:51:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:52:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:53:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:54:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:55:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:56:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:57:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:58:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:00.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
24-11-20.23:59:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务,更新奖品消耗库存[延迟队列获取,降低对数据库的更新频次,不要产生竞争]
